/**
 * üéØ –ö–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è sticky –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 * –ö–∞–∫ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞—Ö - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–∏–ø–∞—é—Ç –∫ –≤–µ—Ä—Ö—É –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
 */

import { ref, onMounted, onUnmounted } from 'vue'

// üïê –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è debounce –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
const debounce = (func, wait) => {
  let timeout;
  return function executedFunction(...args) {
    const later = () => {
      clearTimeout(timeout);
      func(...args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
};

export const useSticky = (options = {}) => {
  // üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const defaultOptions = {
    offset: 0, // –û—Ç—Å—Ç—É–ø –æ—Ç –≤–µ—Ä—Ö–∞ —ç–∫—Ä–∞–Ω–∞
    threshold: 100, // –ü–æ—Ä–æ–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –≤ –ø–∏–∫—Å–µ–ª—è—Ö
    zIndex: 1000, // Z-index –¥–ª—è sticky —ç–ª–µ–º–µ–Ω—Ç–∞
    immediateSticky: false, // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è sticky –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    alwaysSticky: false, // –í—Å–µ–≥–¥–∞ –ª–∏–ø–∫–∏–π (–¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
    ...options
  }

  // üéõÔ∏è –†–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  const isSticky = ref(false) // –°–æ—Å—Ç–æ—è–Ω–∏–µ sticky
  const stickyElement = ref(null) // –°—Å—ã–ª–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç
  const placeholder = ref(null) // Placeholder –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–∫–∞—á–∫–æ–≤
  const originalPosition = ref(0) // –ò—Å—Ö–æ–¥–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
  const originalStyles = ref(null) // –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
  const isInitialized = ref(false) // –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

  // üìè –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
  const getElementPosition = (element) => {
    if (!element) return 0

    // üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
    const rect = element.getBoundingClientRect()
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop
    const elementTop = rect.top + scrollTop

    console.log("üìè getElementPosition Debug:", {
      rectTop: rect.top,
      scrollTop,
      elementTop,
      offsetTop: element.offsetTop,
      offsetParent: element.offsetParent
    });

    return elementTop
  }

  // üéØ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  const handleScroll = () => {
    if (!stickyElement.value || !isInitialized.value) return;

    const rect = stickyElement.value.getBoundingClientRect();
    const shouldBeSticky = rect.top <= defaultOptions.offset;

    // üìä –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log("üìä Scroll Debug:", {
      scrollY: window.scrollY,
      elementTop: rect.top,
      offset: defaultOptions.offset,
      shouldBeSticky,
      currentlySticky: isSticky.value,
      elementHeight: stickyElement.value.offsetHeight,
      placeholderDisplay: placeholder.value?.style.display,
      placeholderHeight: placeholder.value?.offsetHeight
    });

    if (shouldBeSticky && !isSticky.value) {
      // üéØ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º sticky —Ä–µ–∂–∏–º
      console.log("üéØ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º sticky —Ä–µ–∂–∏–º");

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
      if (!originalStyles.value) {
        originalStyles.value = {
          position: stickyElement.value.style.position,
          top: stickyElement.value.style.top,
          left: stickyElement.value.style.left,
          right: stickyElement.value.style.right,
          width: stickyElement.value.style.width,
          zIndex: stickyElement.value.style.zIndex,
        };
      }

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É placeholder —Ä–∞–≤–Ω–æ–π –≤—ã—Å–æ—Ç–µ —ç–ª–µ–º–µ–Ω—Ç–∞
      if (placeholder.value) {
        placeholder.value.style.height = `${stickyElement.value.offsetHeight}px`;
        placeholder.value.style.display = 'block';
        console.log(`üìê Placeholder –≤—ã—Å–æ—Ç–∞: ${stickyElement.value.offsetHeight}px`);
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å sticky
      stickyElement.value.classList.add('is-sticky');
      isSticky.value = true;

    } else if (!shouldBeSticky && isSticky.value) {
      // üßπ –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º sticky —Ä–µ–∂–∏–º
      console.log("üßπ –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º sticky —Ä–µ–∂–∏–º");

      // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å sticky
      stickyElement.value.classList.remove('is-sticky');

      // –°–∫—Ä—ã–≤–∞–µ–º placeholder
      if (placeholder.value) {
        placeholder.value.style.display = 'none';
        placeholder.value.style.height = '0px';
        console.log("üßπ Placeholder —Å–∫—Ä—ã—Ç");
      }

      isSticky.value = false;
    }
  };

  // üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è sticky –ø–æ–≤–µ–¥–µ–Ω–∏—è
  const initSticky = (element) => {
    if (!element || typeof window === 'undefined') {
      console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ SSR —Ä–µ–∂–∏–º')
      return
    }

    console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è sticky –ø–æ–≤–µ–¥–µ–Ω–∏—è')
    stickyElement.value = element

    // üìè –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–∞
    originalPosition.value = getElementPosition(element)

    // üé® –°–æ–∑–¥–∞–µ–º placeholder –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–∫–∞—á–∫–æ–≤
    if (!placeholder.value) {
      placeholder.value = document.createElement('div')
      placeholder.value.style.display = 'none'
      placeholder.value.style.height = '0px'
      placeholder.value.style.transition = 'height 0.3s ease'
      placeholder.value.setAttribute('data-sticky-placeholder', 'true')

      // –í—Å—Ç–∞–≤–ª—è–µ–º placeholder –ø–µ—Ä–µ–¥ sticky —ç–ª–µ–º–µ–Ω—Ç–æ–º
      element.parentNode.insertBefore(placeholder.value, element)
      console.log('üìè –°–æ–∑–¥–∞–Ω placeholder –¥–ª—è sticky —ç–ª–µ–º–µ–Ω—Ç–∞')
    }

    // üéØ –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    window.addEventListener('scroll', handleScroll, { passive: true })
    window.addEventListener('resize', handleScroll, { passive: true })

    // üéØ –£–õ–£–ß–®–ê–ï–ú: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è alwaysSticky –∏ immediateSticky —Ä–µ–∂–∏–º–æ–≤
    if (defaultOptions.alwaysSticky || defaultOptions.immediateSticky) {
      console.log('üöÄ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π sticky —Ä–µ–∂–∏–º')

      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
      setTimeout(() => {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
        if (!originalStyles.value) {
          originalStyles.value = {
            position: element.style.position,
            top: element.style.top,
            left: element.style.left,
            right: element.style.right,
            width: element.style.width,
            zIndex: element.style.zIndex,
          };
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å sticky
        element.classList.add('is-sticky');
        isSticky.value = true;

        console.log('‚úÖ –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π sticky —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
      }, 50); // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
    }

    isInitialized.value = true;
    console.log('‚úÖ Sticky –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
  }

  // üßπ –û—á–∏—Å—Ç–∫–∞ sticky –ø–æ–≤–µ–¥–µ–Ω–∏—è
  const cleanup = () => {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ sticky –ø–æ–≤–µ–¥–µ–Ω–∏—è');

    if (stickyElement.value) {
      // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å sticky
      stickyElement.value.classList.remove('is-sticky');

      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
      if (originalStyles.value) {
        const original = originalStyles.value;
        stickyElement.value.style.position = original.position || '';
        stickyElement.value.style.top = original.top || '';
        stickyElement.value.style.left = original.left || '';
        stickyElement.value.style.right = original.right || '';
        stickyElement.value.style.width = original.width || '';
        stickyElement.value.style.zIndex = original.zIndex || '';
      }
    }

    // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    if (typeof window !== 'undefined') {
      window.removeEventListener('scroll', handleScroll);
      window.removeEventListener('resize', handleScroll);
    }

    // –£–¥–∞–ª—è–µ–º placeholder
    if (placeholder.value && placeholder.value.parentNode) {
      placeholder.value.parentNode.removeChild(placeholder.value);
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    stickyElement.value = null;
    placeholder.value = null;
    isSticky.value = false;
    originalPosition.value = 0;
    originalStyles.value = null;
    isInitialized.value = false;

    console.log('‚úÖ Sticky –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ');
  }

  // üéØ –•—É–∫–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
  onMounted(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ initSticky
  })

  onUnmounted(() => {
    cleanup()
  })

  // üì± –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  const handleResize = debounce(() => {
    console.log("üì± –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞");

    if (!stickyElement.value) return;

    // üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–∞
    originalPosition.value = getElementPosition(stickyElement.value);
    console.log("üìè –ù–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ—Å–ª–µ —Ä–µ—Å–∞–π–∑–∞:", originalPosition.value);

    // üéØ –û–±–Ω–æ–≤–ª—è–µ–º placeholder –µ—Å–ª–∏ sticky –∞–∫—Ç–∏–≤–µ–Ω
    if (isSticky.value && placeholder.value) {
      const elementHeight = stickyElement.value.offsetHeight;
      placeholder.value.style.height = `${elementHeight}px`;
      console.log("üìè –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã—Å–æ—Ç—É placeholder –ø–æ—Å–ª–µ —Ä–µ—Å–∞–π–∑–∞:", elementHeight + "px");
    }

    // üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    handleScroll();
  }, 250); // –î–µ–±–∞—É–Ω—Å 250–º—Å –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

  // üì§ –í–æ–∑–≤—Ä–∞—â–∞–µ–º API –∫–æ–º–ø–æ–∑–∞–±–ª–∞
  return {
    isSticky,
    stickyElement,
    initSticky,
    cleanup,
    handleScroll
  }
}

/**
 * üé® CSS –∫–ª–∞—Å—Å—ã –¥–ª—è sticky –ø–æ–≤–µ–¥–µ–Ω–∏—è (–¥–æ–±–∞–≤–∏—Ç—å –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏)
 *
 * .is-sticky {
 *   position: fixed !important;
 *   top: 0;
 *   left: 0;
 *   right: 0;
 *   z-index: 1000;
 *   animation: stickySlideDown 0.3s cubic-bezier(0.4, 0, 0.2, 1);
 * }
 *
 * @keyframes stickySlideDown {
 *   from {
 *     transform: translateY(-100%);
 *     opacity: 0;
 *   }
 *   to {
 *     transform: translateY(0);
 *     opacity: 1;
 *   }
 * }
 *
 * .sticky-placeholder {
 *   width: 100%;
 *   pointer-events: none;
 * }
 */
