/**
 * üéØ –ö–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è sticky –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 * –ö–∞–∫ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞—Ö - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–∏–ø–∞—é—Ç –∫ –≤–µ—Ä—Ö—É –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
 */

import { ref, onMounted, onUnmounted } from 'vue'

export const useSticky = (options = {}) => {
  // üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const defaultOptions = {
    offset: 0, // –û—Ç—Å—Ç—É–ø –æ—Ç –≤–µ—Ä—Ö–∞ —ç–∫—Ä–∞–Ω–∞
    threshold: 100, // –ü–æ—Ä–æ–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –≤ –ø–∏–∫—Å–µ–ª—è—Ö
    zIndex: 1000, // Z-index –¥–ª—è sticky —ç–ª–µ–º–µ–Ω—Ç–∞
    ...options
  }

  // üéõÔ∏è –†–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  const isSticky = ref(false) // –°–æ—Å—Ç–æ—è–Ω–∏–µ sticky
  const stickyElement = ref(null) // –°—Å—ã–ª–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç
  const placeholder = ref(null) // Placeholder –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–∫–∞—á–∫–æ–≤
  const originalPosition = ref(0) // –ò—Å—Ö–æ–¥–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞

  // üìè –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
  const getElementPosition = (element) => {
    if (!element) return 0
    const rect = element.getBoundingClientRect()
    return rect.top + window.pageYOffset
  }

  // üéØ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ - –∫–∞–∫ –≤ Tinder, –ø–ª–∞–≤–Ω–æ –∏ –æ—Ç–∑—ã–≤—á–∏–≤–æ
  const handleScroll = () => {
    if (!stickyElement.value) return

    const scrollTop = window.pageYOffset || document.documentElement.scrollTop
    const elementTop = originalPosition.value
    const shouldBeSticky = scrollTop > (elementTop - defaultOptions.offset)

    // üîÑ –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (shouldBeSticky !== isSticky.value) {
      isSticky.value = shouldBeSticky

      // üì± –î–æ–±–∞–≤–ª—è–µ–º/—É–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
      if (isSticky.value) {
        stickyElement.value.classList.add('is-sticky')
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º placeholder –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–∫–∞—á–∫–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        if (placeholder.value) {
          placeholder.value.style.display = 'block'
          placeholder.value.style.height = `${stickyElement.value.offsetHeight}px`
        }
      } else {
        stickyElement.value.classList.remove('is-sticky')
        // –°–∫—Ä—ã–≤–∞–µ–º placeholder
        if (placeholder.value) {
          placeholder.value.style.display = 'none'
        }
      }
    }
  }

  // üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è sticky –ø–æ–≤–µ–¥–µ–Ω–∏—è
  const initSticky = (element) => {
    if (!element) return

    stickyElement.value = element
    originalPosition.value = getElementPosition(element)

    // üì± –°–æ–∑–¥–∞–µ–º placeholder —ç–ª–µ–º–µ–Ω—Ç
    const placeholderEl = document.createElement('div')
    placeholderEl.className = 'sticky-placeholder'
    placeholderEl.style.display = 'none'
    placeholderEl.style.visibility = 'hidden'
    element.parentNode.insertBefore(placeholderEl, element)
    placeholder.value = placeholderEl

    // üé® –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è sticky —ç–ª–µ–º–µ–Ω—Ç–∞
    element.style.transition = 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'
    element.style.zIndex = defaultOptions.zIndex

    // üìä –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    window.addEventListener('scroll', handleScroll, { passive: true })
    window.addEventListener('resize', () => {
      originalPosition.value = getElementPosition(element)
    }, { passive: true })

    // üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    handleScroll()
  }

  // üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  const destroySticky = () => {
    window.removeEventListener('scroll', handleScroll)
    window.removeEventListener('resize', handleScroll)

    if (stickyElement.value) {
      stickyElement.value.classList.remove('is-sticky')
    }

    if (placeholder.value && placeholder.value.parentNode) {
      placeholder.value.parentNode.removeChild(placeholder.value)
    }
  }

  // üéØ –•—É–∫–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
  onMounted(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ initSticky
  })

  onUnmounted(() => {
    destroySticky()
  })

  // üì§ –í–æ–∑–≤—Ä–∞—â–∞–µ–º API –∫–æ–º–ø–æ–∑–∞–±–ª–∞
  return {
    isSticky,
    stickyElement,
    initSticky,
    destroySticky,
    handleScroll
  }
}

/**
 * üé® CSS –∫–ª–∞—Å—Å—ã –¥–ª—è sticky –ø–æ–≤–µ–¥–µ–Ω–∏—è (–¥–æ–±–∞–≤–∏—Ç—å –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏)
 *
 * .is-sticky {
 *   position: fixed !important;
 *   top: 0;
 *   left: 0;
 *   right: 0;
 *   z-index: 1000;
 *   animation: stickySlideDown 0.3s cubic-bezier(0.4, 0, 0.2, 1);
 * }
 *
 * @keyframes stickySlideDown {
 *   from {
 *     transform: translateY(-100%);
 *     opacity: 0;
 *   }
 *   to {
 *     transform: translateY(0);
 *     opacity: 1;
 *   }
 * }
 *
 * .sticky-placeholder {
 *   width: 100%;
 *   pointer-events: none;
 * }
 */
